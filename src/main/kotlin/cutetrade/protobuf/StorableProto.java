// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storable.proto
// Protobuf Java Version: 4.26.0

package cutetrade.protobuf;

public final class StorableProto {
  private StorableProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 0,
      /* suffix= */ "",
      StorableProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlayerStoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cutetrade.protobuf.storable.PlayerStore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    int getNameToPlayerCount();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    boolean containsNameToPlayer(
        java.lang.String key);
    /**
     * Use {@link #getNameToPlayerMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player>
    getNameToPlayer();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player>
    getNameToPlayerMap();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    /* nullable */
cutetrade.protobuf.CommonProto.Player getNameToPlayerOrDefault(
        java.lang.String key,
        /* nullable */
cutetrade.protobuf.CommonProto.Player defaultValue);
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    cutetrade.protobuf.CommonProto.Player getNameToPlayerOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code cutetrade.protobuf.storable.PlayerStore}
   */
  public static final class PlayerStore extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cutetrade.protobuf.storable.PlayerStore)
      PlayerStoreOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 0,
        /* suffix= */ "",
        PlayerStore.class.getName());
    }
    // Use PlayerStore.newBuilder() to construct.
    private PlayerStore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PlayerStore() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetNameToPlayer();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cutetrade.protobuf.StorableProto.PlayerStore.class, cutetrade.protobuf.StorableProto.PlayerStore.Builder.class);
    }

    public static final int NAME_TO_PLAYER_FIELD_NUMBER = 1;
    private static final class NameToPlayerDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, cutetrade.protobuf.CommonProto.Player> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, cutetrade.protobuf.CommonProto.Player>newDefaultInstance(
                  cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  cutetrade.protobuf.CommonProto.Player.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, cutetrade.protobuf.CommonProto.Player> nameToPlayer_;
    private com.google.protobuf.MapField<java.lang.String, cutetrade.protobuf.CommonProto.Player>
    internalGetNameToPlayer() {
      if (nameToPlayer_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NameToPlayerDefaultEntryHolder.defaultEntry);
      }
      return nameToPlayer_;
    }
    public int getNameToPlayerCount() {
      return internalGetNameToPlayer().getMap().size();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    @java.lang.Override
    public boolean containsNameToPlayer(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNameToPlayer().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNameToPlayerMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> getNameToPlayer() {
      return getNameToPlayerMap();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> getNameToPlayerMap() {
      return internalGetNameToPlayer().getMap();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
cutetrade.protobuf.CommonProto.Player getNameToPlayerOrDefault(
        java.lang.String key,
        /* nullable */
cutetrade.protobuf.CommonProto.Player defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> map =
          internalGetNameToPlayer().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
     */
    @java.lang.Override
    public cutetrade.protobuf.CommonProto.Player getNameToPlayerOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> map =
          internalGetNameToPlayer().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetNameToPlayer(),
          NameToPlayerDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, cutetrade.protobuf.CommonProto.Player> entry
           : internalGetNameToPlayer().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Player>
        nameToPlayer__ = NameToPlayerDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, nameToPlayer__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cutetrade.protobuf.StorableProto.PlayerStore)) {
        return super.equals(obj);
      }
      cutetrade.protobuf.StorableProto.PlayerStore other = (cutetrade.protobuf.StorableProto.PlayerStore) obj;

      if (!internalGetNameToPlayer().equals(
          other.internalGetNameToPlayer())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetNameToPlayer().getMap().isEmpty()) {
        hash = (37 * hash) + NAME_TO_PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNameToPlayer().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cutetrade.protobuf.StorableProto.PlayerStore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cutetrade.protobuf.StorableProto.PlayerStore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cutetrade.protobuf.StorableProto.PlayerStore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cutetrade.protobuf.StorableProto.PlayerStore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cutetrade.protobuf.storable.PlayerStore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cutetrade.protobuf.storable.PlayerStore)
        cutetrade.protobuf.StorableProto.PlayerStoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetNameToPlayer();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableNameToPlayer();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cutetrade.protobuf.StorableProto.PlayerStore.class, cutetrade.protobuf.StorableProto.PlayerStore.Builder.class);
      }

      // Construct using cutetrade.protobuf.StorableProto.PlayerStore.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableNameToPlayer().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor;
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.PlayerStore getDefaultInstanceForType() {
        return cutetrade.protobuf.StorableProto.PlayerStore.getDefaultInstance();
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.PlayerStore build() {
        cutetrade.protobuf.StorableProto.PlayerStore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.PlayerStore buildPartial() {
        cutetrade.protobuf.StorableProto.PlayerStore result = new cutetrade.protobuf.StorableProto.PlayerStore(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cutetrade.protobuf.StorableProto.PlayerStore result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.nameToPlayer_ = internalGetNameToPlayer().build(NameToPlayerDefaultEntryHolder.defaultEntry);
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cutetrade.protobuf.StorableProto.PlayerStore) {
          return mergeFrom((cutetrade.protobuf.StorableProto.PlayerStore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cutetrade.protobuf.StorableProto.PlayerStore other) {
        if (other == cutetrade.protobuf.StorableProto.PlayerStore.getDefaultInstance()) return this;
        internalGetMutableNameToPlayer().mergeFrom(
            other.internalGetNameToPlayer());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Player>
                nameToPlayer__ = input.readMessage(
                    NameToPlayerDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableNameToPlayer().ensureBuilderMap().put(
                    nameToPlayer__.getKey(), nameToPlayer__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private static final class NameToPlayerConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder, cutetrade.protobuf.CommonProto.Player> {
        @java.lang.Override
        public cutetrade.protobuf.CommonProto.Player build(cutetrade.protobuf.CommonProto.PlayerOrBuilder val) {
          if (val instanceof cutetrade.protobuf.CommonProto.Player) { return (cutetrade.protobuf.CommonProto.Player) val; }
          return ((cutetrade.protobuf.CommonProto.Player.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Player> defaultEntry() {
          return NameToPlayerDefaultEntryHolder.defaultEntry;
        }
      };
      private static final NameToPlayerConverter nameToPlayerConverter = new NameToPlayerConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder, cutetrade.protobuf.CommonProto.Player, cutetrade.protobuf.CommonProto.Player.Builder> nameToPlayer_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder, cutetrade.protobuf.CommonProto.Player, cutetrade.protobuf.CommonProto.Player.Builder>
          internalGetNameToPlayer() {
        if (nameToPlayer_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(nameToPlayerConverter);
        }
        return nameToPlayer_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder, cutetrade.protobuf.CommonProto.Player, cutetrade.protobuf.CommonProto.Player.Builder>
          internalGetMutableNameToPlayer() {
        if (nameToPlayer_ == null) {
          nameToPlayer_ = new com.google.protobuf.MapFieldBuilder<>(nameToPlayerConverter);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return nameToPlayer_;
      }
      public int getNameToPlayerCount() {
        return internalGetNameToPlayer().ensureBuilderMap().size();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      @java.lang.Override
      public boolean containsNameToPlayer(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetNameToPlayer().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getNameToPlayerMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> getNameToPlayer() {
        return getNameToPlayerMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> getNameToPlayerMap() {
        return internalGetNameToPlayer().getImmutableMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
cutetrade.protobuf.CommonProto.Player getNameToPlayerOrDefault(
          java.lang.String key,
          /* nullable */
cutetrade.protobuf.CommonProto.Player defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder> map = internalGetMutableNameToPlayer().ensureBuilderMap();
        return map.containsKey(key) ? nameToPlayerConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      @java.lang.Override
      public cutetrade.protobuf.CommonProto.Player getNameToPlayerOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder> map = internalGetMutableNameToPlayer().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return nameToPlayerConverter.build(map.get(key));
      }
      public Builder clearNameToPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableNameToPlayer().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      public Builder removeNameToPlayer(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableNameToPlayer().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player>
          getMutableNameToPlayer() {
        bitField0_ |= 0x00000001;
        return internalGetMutableNameToPlayer().ensureMessageMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      public Builder putNameToPlayer(
          java.lang.String key,
          cutetrade.protobuf.CommonProto.Player value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableNameToPlayer().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      public Builder putAllNameToPlayer(
          java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Player> values) {
        for (java.util.Map.Entry<java.lang.String, cutetrade.protobuf.CommonProto.Player> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableNameToPlayer().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Player&gt; name_to_player = 1;</code>
       */
      public cutetrade.protobuf.CommonProto.Player.Builder putNameToPlayerBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.PlayerOrBuilder> builderMap = internalGetMutableNameToPlayer().ensureBuilderMap();
        cutetrade.protobuf.CommonProto.PlayerOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = cutetrade.protobuf.CommonProto.Player.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof cutetrade.protobuf.CommonProto.Player) {
          entry = ((cutetrade.protobuf.CommonProto.Player) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (cutetrade.protobuf.CommonProto.Player.Builder) entry;
      }

      // @@protoc_insertion_point(builder_scope:cutetrade.protobuf.storable.PlayerStore)
    }

    // @@protoc_insertion_point(class_scope:cutetrade.protobuf.storable.PlayerStore)
    private static final cutetrade.protobuf.StorableProto.PlayerStore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cutetrade.protobuf.StorableProto.PlayerStore();
    }

    public static cutetrade.protobuf.StorableProto.PlayerStore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerStore>
        PARSER = new com.google.protobuf.AbstractParser<PlayerStore>() {
      @java.lang.Override
      public PlayerStore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PlayerStore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerStore> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cutetrade.protobuf.StorableProto.PlayerStore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TradeStoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cutetrade.protobuf.storable.TradeStore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    int getTradeIdToPlayerNameCount();
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    boolean containsTradeIdToPlayerName(
        java.lang.String key);
    /**
     * Use {@link #getTradeIdToPlayerNameMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getTradeIdToPlayerName();
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getTradeIdToPlayerNameMap();
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    /* nullable */
java.lang.String getTradeIdToPlayerNameOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    java.lang.String getTradeIdToPlayerNameOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    int getTradeIdToTradeCount();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    boolean containsTradeIdToTrade(
        java.lang.String key);
    /**
     * Use {@link #getTradeIdToTradeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
    getTradeIdToTrade();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
    getTradeIdToTradeMap();
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    /* nullable */
cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrDefault(
        java.lang.String key,
        /* nullable */
cutetrade.protobuf.CommonProto.Trade defaultValue);
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code cutetrade.protobuf.storable.TradeStore}
   */
  public static final class TradeStore extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cutetrade.protobuf.storable.TradeStore)
      TradeStoreOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 0,
        /* suffix= */ "",
        TradeStore.class.getName());
    }
    // Use TradeStore.newBuilder() to construct.
    private TradeStore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TradeStore() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetTradeIdToPlayerName();
        case 2:
          return internalGetTradeIdToTrade();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cutetrade.protobuf.StorableProto.TradeStore.class, cutetrade.protobuf.StorableProto.TradeStore.Builder.class);
    }

    public static final int TRADE_ID_TO_PLAYER_NAME_FIELD_NUMBER = 1;
    private static final class TradeIdToPlayerNameDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tradeIdToPlayerName_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTradeIdToPlayerName() {
      if (tradeIdToPlayerName_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TradeIdToPlayerNameDefaultEntryHolder.defaultEntry);
      }
      return tradeIdToPlayerName_;
    }
    public int getTradeIdToPlayerNameCount() {
      return internalGetTradeIdToPlayerName().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    @java.lang.Override
    public boolean containsTradeIdToPlayerName(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTradeIdToPlayerName().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTradeIdToPlayerNameMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTradeIdToPlayerName() {
      return getTradeIdToPlayerNameMap();
    }
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getTradeIdToPlayerNameMap() {
      return internalGetTradeIdToPlayerName().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getTradeIdToPlayerNameOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTradeIdToPlayerName().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getTradeIdToPlayerNameOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTradeIdToPlayerName().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TRADE_ID_TO_TRADE_FIELD_NUMBER = 2;
    private static final class TradeIdToTradeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, cutetrade.protobuf.CommonProto.Trade> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, cutetrade.protobuf.CommonProto.Trade>newDefaultInstance(
                  cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  cutetrade.protobuf.CommonProto.Trade.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, cutetrade.protobuf.CommonProto.Trade> tradeIdToTrade_;
    private com.google.protobuf.MapField<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
    internalGetTradeIdToTrade() {
      if (tradeIdToTrade_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TradeIdToTradeDefaultEntryHolder.defaultEntry);
      }
      return tradeIdToTrade_;
    }
    public int getTradeIdToTradeCount() {
      return internalGetTradeIdToTrade().getMap().size();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    @java.lang.Override
    public boolean containsTradeIdToTrade(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTradeIdToTrade().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTradeIdToTradeMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> getTradeIdToTrade() {
      return getTradeIdToTradeMap();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> getTradeIdToTradeMap() {
      return internalGetTradeIdToTrade().getMap();
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrDefault(
        java.lang.String key,
        /* nullable */
cutetrade.protobuf.CommonProto.Trade defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> map =
          internalGetTradeIdToTrade().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
     */
    @java.lang.Override
    public cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> map =
          internalGetTradeIdToTrade().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetTradeIdToPlayerName(),
          TradeIdToPlayerNameDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetTradeIdToTrade(),
          TradeIdToTradeDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetTradeIdToPlayerName().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        tradeIdToPlayerName__ = TradeIdToPlayerNameDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, tradeIdToPlayerName__);
      }
      for (java.util.Map.Entry<java.lang.String, cutetrade.protobuf.CommonProto.Trade> entry
           : internalGetTradeIdToTrade().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
        tradeIdToTrade__ = TradeIdToTradeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, tradeIdToTrade__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cutetrade.protobuf.StorableProto.TradeStore)) {
        return super.equals(obj);
      }
      cutetrade.protobuf.StorableProto.TradeStore other = (cutetrade.protobuf.StorableProto.TradeStore) obj;

      if (!internalGetTradeIdToPlayerName().equals(
          other.internalGetTradeIdToPlayerName())) return false;
      if (!internalGetTradeIdToTrade().equals(
          other.internalGetTradeIdToTrade())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetTradeIdToPlayerName().getMap().isEmpty()) {
        hash = (37 * hash) + TRADE_ID_TO_PLAYER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTradeIdToPlayerName().hashCode();
      }
      if (!internalGetTradeIdToTrade().getMap().isEmpty()) {
        hash = (37 * hash) + TRADE_ID_TO_TRADE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTradeIdToTrade().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cutetrade.protobuf.StorableProto.TradeStore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cutetrade.protobuf.StorableProto.TradeStore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cutetrade.protobuf.StorableProto.TradeStore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cutetrade.protobuf.StorableProto.TradeStore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cutetrade.protobuf.storable.TradeStore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cutetrade.protobuf.storable.TradeStore)
        cutetrade.protobuf.StorableProto.TradeStoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetTradeIdToPlayerName();
          case 2:
            return internalGetTradeIdToTrade();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableTradeIdToPlayerName();
          case 2:
            return internalGetMutableTradeIdToTrade();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cutetrade.protobuf.StorableProto.TradeStore.class, cutetrade.protobuf.StorableProto.TradeStore.Builder.class);
      }

      // Construct using cutetrade.protobuf.StorableProto.TradeStore.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableTradeIdToPlayerName().clear();
        internalGetMutableTradeIdToTrade().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cutetrade.protobuf.StorableProto.internal_static_cutetrade_protobuf_storable_TradeStore_descriptor;
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.TradeStore getDefaultInstanceForType() {
        return cutetrade.protobuf.StorableProto.TradeStore.getDefaultInstance();
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.TradeStore build() {
        cutetrade.protobuf.StorableProto.TradeStore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cutetrade.protobuf.StorableProto.TradeStore buildPartial() {
        cutetrade.protobuf.StorableProto.TradeStore result = new cutetrade.protobuf.StorableProto.TradeStore(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(cutetrade.protobuf.StorableProto.TradeStore result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tradeIdToPlayerName_ = internalGetTradeIdToPlayerName();
          result.tradeIdToPlayerName_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tradeIdToTrade_ = internalGetTradeIdToTrade().build(TradeIdToTradeDefaultEntryHolder.defaultEntry);
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cutetrade.protobuf.StorableProto.TradeStore) {
          return mergeFrom((cutetrade.protobuf.StorableProto.TradeStore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cutetrade.protobuf.StorableProto.TradeStore other) {
        if (other == cutetrade.protobuf.StorableProto.TradeStore.getDefaultInstance()) return this;
        internalGetMutableTradeIdToPlayerName().mergeFrom(
            other.internalGetTradeIdToPlayerName());
        bitField0_ |= 0x00000001;
        internalGetMutableTradeIdToTrade().mergeFrom(
            other.internalGetTradeIdToTrade());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                tradeIdToPlayerName__ = input.readMessage(
                    TradeIdToPlayerNameDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableTradeIdToPlayerName().getMutableMap().put(
                    tradeIdToPlayerName__.getKey(), tradeIdToPlayerName__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
                tradeIdToTrade__ = input.readMessage(
                    TradeIdToTradeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableTradeIdToTrade().ensureBuilderMap().put(
                    tradeIdToTrade__.getKey(), tradeIdToTrade__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> tradeIdToPlayerName_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetTradeIdToPlayerName() {
        if (tradeIdToPlayerName_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TradeIdToPlayerNameDefaultEntryHolder.defaultEntry);
        }
        return tradeIdToPlayerName_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableTradeIdToPlayerName() {
        if (tradeIdToPlayerName_ == null) {
          tradeIdToPlayerName_ = com.google.protobuf.MapField.newMapField(
              TradeIdToPlayerNameDefaultEntryHolder.defaultEntry);
        }
        if (!tradeIdToPlayerName_.isMutable()) {
          tradeIdToPlayerName_ = tradeIdToPlayerName_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return tradeIdToPlayerName_;
      }
      public int getTradeIdToPlayerNameCount() {
        return internalGetTradeIdToPlayerName().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      @java.lang.Override
      public boolean containsTradeIdToPlayerName(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetTradeIdToPlayerName().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTradeIdToPlayerNameMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getTradeIdToPlayerName() {
        return getTradeIdToPlayerNameMap();
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getTradeIdToPlayerNameMap() {
        return internalGetTradeIdToPlayerName().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getTradeIdToPlayerNameOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTradeIdToPlayerName().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getTradeIdToPlayerNameOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTradeIdToPlayerName().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearTradeIdToPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableTradeIdToPlayerName().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      public Builder removeTradeIdToPlayerName(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableTradeIdToPlayerName().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableTradeIdToPlayerName() {
        bitField0_ |= 0x00000001;
        return internalGetMutableTradeIdToPlayerName().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      public Builder putTradeIdToPlayerName(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableTradeIdToPlayerName().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; trade_id_to_player_name = 1;</code>
       */
      public Builder putAllTradeIdToPlayerName(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableTradeIdToPlayerName().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      private static final class TradeIdToTradeConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder, cutetrade.protobuf.CommonProto.Trade> {
        @java.lang.Override
        public cutetrade.protobuf.CommonProto.Trade build(cutetrade.protobuf.CommonProto.TradeOrBuilder val) {
          if (val instanceof cutetrade.protobuf.CommonProto.Trade) { return (cutetrade.protobuf.CommonProto.Trade) val; }
          return ((cutetrade.protobuf.CommonProto.Trade.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, cutetrade.protobuf.CommonProto.Trade> defaultEntry() {
          return TradeIdToTradeDefaultEntryHolder.defaultEntry;
        }
      };
      private static final TradeIdToTradeConverter tradeIdToTradeConverter = new TradeIdToTradeConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder, cutetrade.protobuf.CommonProto.Trade, cutetrade.protobuf.CommonProto.Trade.Builder> tradeIdToTrade_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder, cutetrade.protobuf.CommonProto.Trade, cutetrade.protobuf.CommonProto.Trade.Builder>
          internalGetTradeIdToTrade() {
        if (tradeIdToTrade_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(tradeIdToTradeConverter);
        }
        return tradeIdToTrade_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder, cutetrade.protobuf.CommonProto.Trade, cutetrade.protobuf.CommonProto.Trade.Builder>
          internalGetMutableTradeIdToTrade() {
        if (tradeIdToTrade_ == null) {
          tradeIdToTrade_ = new com.google.protobuf.MapFieldBuilder<>(tradeIdToTradeConverter);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return tradeIdToTrade_;
      }
      public int getTradeIdToTradeCount() {
        return internalGetTradeIdToTrade().ensureBuilderMap().size();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      @java.lang.Override
      public boolean containsTradeIdToTrade(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetTradeIdToTrade().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getTradeIdToTradeMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> getTradeIdToTrade() {
        return getTradeIdToTradeMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> getTradeIdToTradeMap() {
        return internalGetTradeIdToTrade().getImmutableMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrDefault(
          java.lang.String key,
          /* nullable */
cutetrade.protobuf.CommonProto.Trade defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder> map = internalGetMutableTradeIdToTrade().ensureBuilderMap();
        return map.containsKey(key) ? tradeIdToTradeConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      @java.lang.Override
      public cutetrade.protobuf.CommonProto.Trade getTradeIdToTradeOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder> map = internalGetMutableTradeIdToTrade().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return tradeIdToTradeConverter.build(map.get(key));
      }
      public Builder clearTradeIdToTrade() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableTradeIdToTrade().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      public Builder removeTradeIdToTrade(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableTradeIdToTrade().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade>
          getMutableTradeIdToTrade() {
        bitField0_ |= 0x00000002;
        return internalGetMutableTradeIdToTrade().ensureMessageMap();
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      public Builder putTradeIdToTrade(
          java.lang.String key,
          cutetrade.protobuf.CommonProto.Trade value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableTradeIdToTrade().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      public Builder putAllTradeIdToTrade(
          java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.Trade> values) {
        for (java.util.Map.Entry<java.lang.String, cutetrade.protobuf.CommonProto.Trade> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableTradeIdToTrade().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .cutetrade.protobuf.common.Trade&gt; trade_id_to_trade = 2;</code>
       */
      public cutetrade.protobuf.CommonProto.Trade.Builder putTradeIdToTradeBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, cutetrade.protobuf.CommonProto.TradeOrBuilder> builderMap = internalGetMutableTradeIdToTrade().ensureBuilderMap();
        cutetrade.protobuf.CommonProto.TradeOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = cutetrade.protobuf.CommonProto.Trade.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof cutetrade.protobuf.CommonProto.Trade) {
          entry = ((cutetrade.protobuf.CommonProto.Trade) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (cutetrade.protobuf.CommonProto.Trade.Builder) entry;
      }

      // @@protoc_insertion_point(builder_scope:cutetrade.protobuf.storable.TradeStore)
    }

    // @@protoc_insertion_point(class_scope:cutetrade.protobuf.storable.TradeStore)
    private static final cutetrade.protobuf.StorableProto.TradeStore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cutetrade.protobuf.StorableProto.TradeStore();
    }

    public static cutetrade.protobuf.StorableProto.TradeStore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TradeStore>
        PARSER = new com.google.protobuf.AbstractParser<TradeStore>() {
      @java.lang.Override
      public TradeStore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TradeStore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TradeStore> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cutetrade.protobuf.StorableProto.TradeStore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cutetrade_protobuf_storable_PlayerStore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cutetrade_protobuf_storable_TradeStore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cutetrade_protobuf_storable_TradeStore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016storable.proto\022\033cutetrade.protobuf.sto" +
      "rable\032\014common.proto\"\271\001\n\013PlayerStore\022R\n\016n" +
      "ame_to_player\030\001 \003(\0132:.cutetrade.protobuf" +
      ".storable.PlayerStore.NameToPlayerEntry\032" +
      "V\n\021NameToPlayerEntry\022\013\n\003key\030\001 \001(\t\0220\n\005val" +
      "ue\030\002 \001(\0132!.cutetrade.protobuf.common.Pla" +
      "yer:\0028\001\"\334\002\n\nTradeStore\022a\n\027trade_id_to_pl" +
      "ayer_name\030\001 \003(\0132@.cutetrade.protobuf.sto" +
      "rable.TradeStore.TradeIdToPlayerNameEntr" +
      "y\022V\n\021trade_id_to_trade\030\002 \003(\0132;.cutetrade" +
      ".protobuf.storable.TradeStore.TradeIdToT" +
      "radeEntry\032:\n\030TradeIdToPlayerNameEntry\022\013\n" +
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032W\n\023TradeId" +
      "ToTradeEntry\022\013\n\003key\030\001 \001(\t\022/\n\005value\030\002 \001(\013" +
      "2 .cutetrade.protobuf.common.Trade:\0028\001B#" +
      "\n\022cutetrade.protobufB\rStorableProtob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cutetrade.protobuf.CommonProto.getDescriptor(),
        });
    internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cutetrade_protobuf_storable_PlayerStore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor,
        new java.lang.String[] { "NameToPlayer", });
    internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_descriptor =
      internal_static_cutetrade_protobuf_storable_PlayerStore_descriptor.getNestedTypes().get(0);
    internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cutetrade_protobuf_storable_PlayerStore_NameToPlayerEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_cutetrade_protobuf_storable_TradeStore_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cutetrade_protobuf_storable_TradeStore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cutetrade_protobuf_storable_TradeStore_descriptor,
        new java.lang.String[] { "TradeIdToPlayerName", "TradeIdToTrade", });
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_descriptor =
      internal_static_cutetrade_protobuf_storable_TradeStore_descriptor.getNestedTypes().get(0);
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToPlayerNameEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_descriptor =
      internal_static_cutetrade_protobuf_storable_TradeStore_descriptor.getNestedTypes().get(1);
    internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cutetrade_protobuf_storable_TradeStore_TradeIdToTradeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
    cutetrade.protobuf.CommonProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
